//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.19 at 03:00:30 PM MEZ 
//


package org.fdi._2010.client;

import ae.javax.xml.bind.annotation.XmlEnum;
import ae.javax.xml.bind.annotation.XmlEnumValue;
import ae.javax.xml.bind.annotation.XmlType;



/**
 * <p>Java class for AcknowledgementSeverityT.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AcknowledgementSeverityT">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Info"/>
 *     &lt;enumeration value="Warning"/>
 *     &lt;enumeration value="Error"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AcknowledgementSeverityT")
@XmlEnum
public enum AcknowledgementSeverityT {


    /**
     * Acknowledging a significant, successful operation.
     * 
     */
    @XmlEnumValue("Info")
    INFO("Info"),

    /**
     * Acknowledging a problem that is not immediately significant, but that may signify conditions that could cause future problems.
     * 
     */
    @XmlEnumValue("Warning")
    WARNING("Warning"),

    /**
     * Acknowledging a significant problem the user should know about; usually a loss of functionality or data.
     * 
     */
    @XmlEnumValue("Error")
    ERROR("Error");
    private final String value;

    AcknowledgementSeverityT(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AcknowledgementSeverityT fromValue(String v) {
        for (AcknowledgementSeverityT c: AcknowledgementSeverityT.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
